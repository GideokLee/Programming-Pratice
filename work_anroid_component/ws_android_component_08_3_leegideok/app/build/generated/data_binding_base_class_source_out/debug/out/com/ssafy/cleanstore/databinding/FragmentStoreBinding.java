// Generated by view binder compiler. Do not edit!
package com.ssafy.cleanstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ssafy.cleanstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStoreBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRegister;

  @NonNull
  public final ConstraintLayout layoutStoreInfo;

  @NonNull
  public final TextView tvStoreLat;

  @NonNull
  public final TextView tvStoreLng;

  @NonNull
  public final TextView tvStoreName;

  @NonNull
  public final TextView tvStoreTel;

  private FragmentStoreBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnRegister,
      @NonNull ConstraintLayout layoutStoreInfo, @NonNull TextView tvStoreLat,
      @NonNull TextView tvStoreLng, @NonNull TextView tvStoreName, @NonNull TextView tvStoreTel) {
    this.rootView = rootView;
    this.btnRegister = btnRegister;
    this.layoutStoreInfo = layoutStoreInfo;
    this.tvStoreLat = tvStoreLat;
    this.tvStoreLng = tvStoreLng;
    this.tvStoreName = tvStoreName;
    this.tvStoreTel = tvStoreTel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStoreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStoreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_store, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStoreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_register;
      Button btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.layout_store_info;
      ConstraintLayout layoutStoreInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutStoreInfo == null) {
        break missingId;
      }

      id = R.id.tv_store_lat;
      TextView tvStoreLat = ViewBindings.findChildViewById(rootView, id);
      if (tvStoreLat == null) {
        break missingId;
      }

      id = R.id.tv_store_lng;
      TextView tvStoreLng = ViewBindings.findChildViewById(rootView, id);
      if (tvStoreLng == null) {
        break missingId;
      }

      id = R.id.tv_store_name;
      TextView tvStoreName = ViewBindings.findChildViewById(rootView, id);
      if (tvStoreName == null) {
        break missingId;
      }

      id = R.id.tv_store_tel;
      TextView tvStoreTel = ViewBindings.findChildViewById(rootView, id);
      if (tvStoreTel == null) {
        break missingId;
      }

      return new FragmentStoreBinding((ConstraintLayout) rootView, btnRegister, layoutStoreInfo,
          tvStoreLat, tvStoreLng, tvStoreName, tvStoreTel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
